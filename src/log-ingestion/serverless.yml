service: log-monitor-test

custom:
  private: ${file(./private.yml)}
  stage: dev

provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-1
  deploymentBucket: 'temporal-property-monitor-${self:custom.stage}'


functions:
  log-monitor:
    handler: ingestion.handler
    events:
    - cloudwatchLog:
        logGroup: '/aws/lambda/scratch'
        filter: '"#####EVENTUPDATE"'

    role:
      'Fn::GetAtt': [ EventWriterRole, Arn ]

resources:
  Resources:
    EventIngestionLogGroup:
      Type: AWS::Logs::LogGroup
      Properties:
        LogGroupName: /aws/lambda/${self:service}-${self:custom.stage}-event-ingestion
        RetentionInDays: 7
    EventsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
        - AttributeName: type
          AttributeType: S
        - AttributeName: id
          AttributeType: S
        KeySchema:
        - AttributeName: type
          KeyType: HASH
        - AttributeName: id
          KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${self:custom.stage}-MonitoredEvents

    EventWriterRole:
      Type: AWS::IAM::Role
      Properties:
        Path: /
        RoleName: ${self:custom.stage}EventWriterRole
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: lambda.amazonaws.com
        Policies:
          - PolicyName: CreateAndWriteToLogStream
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - 'logs:CreateLogStream'
                Resource:
                  Fn::GetAtt: [ EventIngestionLogGroup, Arn ]
              - Effect: Allow
                Action:
                - 'logs:PutLogEvents'
                Resource:
                  Fn::Join:
                  - ':'
                  - - Fn::GetAtt: [ EventIngestionLogGroup, Arn ]
                    - '*'
          - PolicyName: BatchWriteToEventTable
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              -  Effect: Allow
                 Action:
                 - 'dynamodb:BatchWriteItem'
                 Resource:
                   Fn::Join:
                   - '/'
                   - - 'arn:aws:dynamodb:${self:provider.region}:${self:custom.private.accountId}:table'
                     - Ref: EventsTable
